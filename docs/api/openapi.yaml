openapi: 3.1.0
info:
  title: TrustNet API
  description: AI-powered misinformation detection and fact-checking service
  version: 1.0.0
  contact:
    name: TrustNet Team
    email: api@trustnet.dev
  license:
    name: MIT
    url: https://opensource.org/licenses/MIT

servers:
  - url: https://api.trustnet.dev/v1
    description: Production server
  - url: https://staging-api.trustnet.dev/v1
    description: Staging server
  - url: http://localhost:8080/v1
    description: Development server

security:
  - bearerAuth: []
  - apiKey: []

paths:
  /health:
    get:
      summary: Health check endpoint
      operationId: healthCheck
      security: []
      responses:
        '200':
          description: Service is healthy
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    enum: [healthy]
                  timestamp:
                    type: string
                    format: date-time
                  version:
                    type: string
                  features:
                    type: object
                    properties:
                      verification_engine:
                        type: boolean
                      quarantine_room:
                        type: boolean
                      proactive_feed:
                        type: boolean
                      no_login_required:
                        type: boolean

  # MVP Priority #1: Automated Verification Engine
  /verify:
    post:
      summary: Submit content for automated verification (MVP Core Feature)
      operationId: verifyContent
      security: []  # No login required for MVP
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/VerificationRequest'
            examples:
              simple_text:
                summary: Basic text verification
                value:
                  text: "वैक्सीन में माइक्रोचिप्स होती हैं"
                  language: "hi"
              with_manipulation_check:
                summary: Check for manipulation tactics
                value:
                  text: "URGENT! Free money - click now before it's too late!"
                  urls: ["https://bit.ly/fake-offer"]
                  language: "en"
      responses:
        '202':
          description: Verification request accepted
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VerificationQueued'
        '400':
          $ref: '#/components/responses/BadRequest'
        '429':
          $ref: '#/components/responses/RateLimit'

  /verify/{verificationId}:
    get:
      summary: Get verification results or quarantine status
      operationId: getVerificationResult
      security: []
      parameters:
        - name: verificationId
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: Verification completed or quarantine required
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/VerificationComplete'
                  - $ref: '#/components/schemas/QuarantineRequired'
        '404':
          $ref: '#/components/responses/NotFound'

  # MVP Priority #2: Quarantine Room
  /quarantine/{verificationId}:
    get:
      summary: Get quarantine item details for user review
      operationId: getQuarantineItem  
      security: []
      parameters:
        - name: verificationId
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: Quarantine item details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/QuarantineItem'
        '404':
          $ref: '#/components/responses/NotFound'

  /quarantine/{verificationId}/verdict:
    post:
      summary: Submit user judgment on quarantined content
      operationId: submitQuarantineVerdict
      security: []
      parameters:
        - name: verificationId
          in: path
          required: true
          schema:
            type: string
            format: uuid
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserVerdict'
      responses:
        '201':
          description: User verdict recorded
          content:
            application/json:
              schema:
                type: object
                properties:
                  verdict_id:
                    type: string
                    format: uuid
                  message:
                    type: string
                  contribution_impact:
                    type: string
                  quarantine_resolved:
                    type: boolean

  # MVP Priority #3: Proactive Homepage Feed  
  /feed:
    get:
      summary: Get educational content feed for homepage
      operationId: getEducationalFeed
      security: []
      parameters:
        - name: language
          in: query
          schema:
            type: string
            enum: [hi, bn, te, mr, ta, kn, ml, gu, or, pa, ur, en]
            default: en
        - name: limit
          in: query
          schema:
            type: integer
            minimum: 1
            maximum: 20
            default: 10
        - name: offset
          in: query
          schema:
            type: integer
            minimum: 0
            default: 0
      responses:
        '200':
          description: Educational feed content
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EducationalFeed'

  /feed/{itemId}:
    get:
      summary: Get detailed educational content item
      operationId: getFeedItem
      security: []
      parameters:
        - name: itemId
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: Detailed educational content
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FeedItemDetail'
        '404':
          $ref: '#/components/responses/NotFound'

  /feed/{itemId}/engagement:
    post:
      summary: Submit engagement feedback on educational content
      operationId: submitFeedEngagement
      security: []
      parameters:
        - name: itemId
          in: path
          required: true
          schema:
            type: string
            format: uuid
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EngagementFeedback'
      responses:
        '201':
          description: Engagement recorded
          content:
            application/json:
              schema:
                type: object
                properties:
                  engagement_id:
                    type: string
                    format: uuid
                  message:
                    type: string
                  contribution:
                    type: string

  /trends:
    get:
      summary: Get trending misinformation patterns (educational)
      operationId: getTrends
      security: []
      parameters:
        - name: language
          in: query
          schema:
            type: string
            default: en
        - name: time_range
          in: query
          schema:
            type: string
            enum: [7d, 30d]
            default: 7d
      responses:
        '200':
          description: Trending misinformation patterns
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TrendingPatterns'

  /analyze:
    post:
      summary: Submit content for misinformation analysis
      operationId: analyzeContent
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AnalysisRequest'
            examples:
              text_only:
                summary: Simple text analysis
                value:
                  text: "वैक्सीन में माइक्रोचिप्स होती हैं"
                  language: "hi"
              with_urls:
                summary: Analysis with URLs
                value:
                  text: "Breaking: Major earthquake predicted for tomorrow"
                  urls: ["https://example.com/fake-news"]
                  language: "en"
                  priority: "high"
      responses:
        '200':
          description: Analysis completed (synchronous)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AnalysisResult'
        '202':
          description: Analysis queued (asynchronous)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AnalysisQueued'
        '400':
          $ref: '#/components/responses/BadRequest'
        '429':
          $ref: '#/components/responses/RateLimit'
        '500':
          $ref: '#/components/responses/InternalError'

  /claims/{claimId}:
    get:
      summary: Retrieve claim analysis results
      operationId: getClaim
      parameters:
        - name: claimId
          in: path
          required: true
          schema:
            type: string
            format: uuid
          description: Unique claim identifier
      responses:
        '200':
          description: Claim found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClaimResult'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/InternalError'

  /feedback:
    post:
      summary: Submit feedback on verdict accuracy
      operationId: submitFeedback
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FeedbackRequest'
      responses:
        '201':
          description: Feedback recorded
          content:
            application/json:
              schema:
                type: object
                properties:
                  feedback_id:
                    type: string
                    format: uuid
                  message:
                    type: string
        '400':
          $ref: '#/components/responses/BadRequest'
        '500':
          $ref: '#/components/responses/InternalError'

components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
    apiKey:
      type: apiKey
      in: header
      name: X-API-Key

  schemas:
    # MVP Feature Schemas
    VerificationRequest:
      type: object
      required: [text]
      properties:
        text:
          type: string
          minLength: 10
          maxLength: 10000
          description: Content to verify for misinformation
        urls:
          type: array
          maxItems: 5
          items:
            type: string
            format: uri
          description: URLs referenced in the content
        images:
          type: array
          maxItems: 3
          items:
            type: string
            format: uri
          description: Image URLs for visual analysis
        language:
          type: string
          enum: [hi, bn, te, mr, ta, kn, ml, gu, or, pa, ur, en]
          description: Primary language of the content
        source_type:
          type: string
          enum: [social_media, news, messaging, email, web]
          description: Platform where content originated

    VerificationQueued:
      type: object
      properties:
        verification_id:
          type: string
          format: uuid
        status:
          type: string
          enum: [analyzing]
        message:
          type: string
        check_url:
          type: string
          description: URL to check verification status
        estimated_completion:
          type: string
          format: date-time

    VerificationComplete:
      type: object
      properties:
        verification_id:
          type: string
          format: uuid
        status:
          type: string
          enum: [completed]
        verification_card:
          type: object
          properties:
            credibility_score:
              type: number
              minimum: 0
              maximum: 1
              description: Overall credibility score
            rating:
              type: string
              enum: [True, False, Mixture, Unproven, Insufficient_Evidence]
            confidence:
              type: number
              minimum: 0
              maximum: 1
            source_analysis:
              type: object
              description: Analysis of sources and URLs
            alternative_headlines:
              type: array
              items:
                type: string
              description: Alternative framing of the claim
            neutral_summary:
              type: string
              description: AI-generated neutral summary
            manipulation_alerts:
              type: array
              items:
                type: object
                properties:
                  type:
                    type: string
                    enum: [emotional_manipulation, unrealistic_incentive, technical_deception, synthetic_media]
                  severity:
                    type: string
                    enum: [low, medium, high]
                  message:
                    type: string
            education_tips:
              type: array
              items:
                type: object
                properties:
                  category:
                    type: string
                  tip:
                    type: string
                  principle:
                    type: string
        processing_time:
          type: integer
        completed_at:
          type: string
          format: date-time

    QuarantineRequired:
      type: object
      properties:
        verification_id:
          type: string
          format: uuid
        status:
          type: string
          enum: [needs_review]
        quarantine_url:
          type: string
          description: URL to quarantine room for this item
        confidence_score:
          type: number
          minimum: 0
          maximum: 1
        suspicious_indicators:
          type: array
          items:
            type: string
        message:
          type: string

    QuarantineItem:
      type: object
      properties:
        verification_id:
          type: string
          format: uuid
        quarantine_item:
          type: object
          properties:
            original_content:
              type: string
            suspicious_elements:
              type: array
              items:
                type: string
            ai_uncertainty:
              type: number
              description: AI's confidence level (low = uncertain)
            highlighted_areas:
              type: array
              items:
                type: object
                description: Visual highlights of suspicious content areas
            context_needed:
              type: array
              items:
                type: string
              description: Additional context questions for user
            similar_claims:
              type: array
              items:
                type: object
                description: Related claims for comparison
        user_action_required:
          type: boolean
        verdict_options:
          type: array
          items:
            type: string
            enum: [legit, misleading, needs_more_info]
        educational_context:
          type: string
          description: Why this content is uncertain

    UserVerdict:
      type: object
      required: [user_verdict]
      properties:
        user_verdict:
          type: string
          enum: [legit, misleading, needs_more_info]
        confidence:
          type: number
          minimum: 1
          maximum: 5
          description: User confidence in their judgment (1-5)
        reasoning:
          type: string
          maxLength: 500
          description: Optional reasoning for the verdict
        user_expertise:
          type: string
          enum: [expert, knowledgeable, general]
          default: general

    EducationalFeed:
      type: object
      properties:
        feed_items:
          type: array
          items:
            $ref: '#/components/schemas/FeedItem'
        trending_topics:
          type: array
          items:
            type: object
            properties:
              topic:
                type: string
              trend_score:
                type: number
              category:
                type: string
        total_count:
          type: integer
        language:
          type: string
        last_updated:
          type: string
          format: date-time
        feed_metadata:
          type: object
          properties:
            user_education_focus:
              type: boolean
            real_world_examples:
              type: boolean
            proactive_learning:
              type: boolean

    FeedItem:
      type: object
      properties:
        id:
          type: string
          format: uuid
        title:
          type: string
        type:
          type: string
          enum: [verified_example, debunked_example, education_tip]
        summary:
          type: string
        original_claim:
          type: string
        verdict:
          type: string
        evidence_summary:
          type: string
        learning_points:
          type: array
          items:
            type: string
        visual_elements:
          type: object
          description: Charts, graphs, highlighted text
        engagement_score:
          type: number
        published_at:
          type: string
          format: date-time
        source_attribution:
          type: string
        category:
          type: string
          enum: [health, politics, finance, social]

    FeedItemDetail:
      type: object
      properties:
        feed_item:
          type: object
          properties:
            id:
              type: string
              format: uuid
            title:
              type: string
            full_content:
              type: string
            original_claim:
              type: string
            detailed_analysis:
              type: string
            fact_check_process:
              type: string
              description: Step-by-step fact-checking methodology
            evidence_chain:
              type: array
              items:
                type: object
                properties:
                  evidence:
                    type: string
                  source:
                    type: string
                  credibility:
                    type: string
            visual_breakdown:
              type: object
              description: Visual analysis of suspicious elements
            manipulation_techniques:
              type: array
              items:
                type: string
              description: Specific manipulation tactics explained
            red_flags:
              type: array
              items:
                type: string
              description: Warning signs highlighted for users
            verification_steps:
              type: array
              items:
                type: string
              description: How users can verify similar claims
            source_attribution:
              type: string
            educational_value:
              type: string
            published_at:
              type: string
              format: date-time
        related_content:
          type: array
          items:
            type: object
            properties:
              id:
                type: string
              title:
                type: string
              summary:
                type: string
              type:
                type: string
        user_actions:
          type: object
          properties:
            can_share:
              type: boolean
            can_bookmark:
              type: boolean
            can_report_error:
              type: boolean

    EngagementFeedback:
      type: object
      required: [engagement_type, rating]
      properties:
        engagement_type:
          type: string
          enum: [helpful, confusing, learned_something, share_worthy]
        rating:
          type: integer
          minimum: 1
          maximum: 5
        comments:
          type: string
          maxLength: 500
        time_spent_seconds:
          type: integer
          description: Time user spent reading the content

    TrendingPatterns:
      type: object
      properties:
        trending_patterns:
          type: array
          items:
            type: object
            properties:
              pattern_name:
                type: string
              description:
                type: string
              frequency:
                type: integer
              example_claims:
                type: array
                items:
                  type: string
              detection_tips:
                type: array
                items:
                  type: string
              related_topics:
                type: array
                items:
                  type: string
              trend_score:
                type: number
              educational_priority:
                type: string
                enum: [low, medium, high]
        time_range:
          type: string
        language:
          type: string
        generated_at:
          type: string
          format: date-time
        disclaimer:
          type: string
    AnalysisRequest:
      type: object
      required: [text]
      properties:
        text:
          type: string
          minLength: 10
          maxLength: 10000
          description: Content to analyze for misinformation
        urls:
          type: array
          maxItems: 5
          items:
            type: string
            format: uri
          description: URLs referenced in the content
        images:
          type: array
          maxItems: 3
          items:
            type: string
            format: uri
          description: Image URLs for visual analysis
        language:
          type: string
          enum: [hi, bn, te, mr, ta, kn, ml, gu, or, pa, ur, en]
          description: Primary language of the content
        source_type:
          type: string
          enum: [social_media, news, messaging, email, web]
          description: Platform where content originated
        priority:
          type: string
          enum: [low, normal, high]
          default: normal
          description: Processing priority level

    AnalysisResult:
      type: object
      properties:
        claim_id:
          type: string
          format: uuid
        verdict:
          $ref: '#/components/schemas/Verdict'
        evidence:
          type: array
          items:
            $ref: '#/components/schemas/Evidence'
        processing_time_ms:
          type: integer
          description: Total processing time in milliseconds
        grounding_coverage:
          type: number
          minimum: 0
          maximum: 1
          description: Percentage of explanation grounded in evidence

    AnalysisQueued:
      type: object
      properties:
        claim_id:
          type: string
          format: uuid
        status:
          type: string
          enum: [queued, processing]
        estimated_completion:
          type: string
          format: date-time
        check_url:
          type: string
          format: uri
          description: URL to check analysis status

    ClaimResult:
      type: object
      properties:
        claim_id:
          type: string
          format: uuid
        status:
          type: string
          enum: [pending, processing, completed, failed]
        claim:
          $ref: '#/components/schemas/Claim'
        verdict:
          $ref: '#/components/schemas/Verdict'
        evidence:
          type: array
          items:
            $ref: '#/components/schemas/Evidence'
        processing_completed_at:
          type: string
          format: date-time

    Claim:
      type: object
      properties:
        id:
          type: string
          format: uuid
        text:
          type: string
        language:
          type: string
        source_type:
          type: string
        created_at:
          type: string
          format: date-time
        pii_redacted:
          type: boolean

    Verdict:
      type: object
      properties:
        id:
          type: string
          format: uuid
        rating:
          type: string
          enum: [True, False, Mixture, Unproven, Insufficient_Evidence]
        confidence_score:
          type: number
          minimum: 0
          maximum: 1
        rationale:
          type: string
          description: Detailed explanation with evidence citations
        education_tips:
          type: array
          items:
            type: string
          description: Media literacy guidance for users
        model_version:
          type: string
        created_at:
          type: string
          format: date-time

    Evidence:
      type: object
      properties:
        id:
          type: string
          format: uuid
        snippet:
          type: string
          description: Relevant text excerpt from source
        source_url:
          type: string
          format: uri
        source_title:
          type: string
        relevance_score:
          type: number
          minimum: 0
          maximum: 1
        evidence_type:
          type: string
          enum: [supporting, refuting, contextual, neutral]

    FeedbackRequest:
      type: object
      required: [verdict_id, user_rating, feedback_type]
      properties:
        verdict_id:
          type: string
          format: uuid
        user_rating:
          type: string
          enum: [accurate, inaccurate, partially_accurate]
        feedback_type:
          type: string
          enum: [rating_disagreement, missing_evidence, poor_explanation, factual_error]
        comments:
          type: string
          maxLength: 1000
        user_expertise:
          type: string
          enum: [expert, knowledgeable, general_public]

    Error:
      type: object
      properties:
        error:
          type: string
          description: Error category
        message:
          type: string
          description: Human-readable error message
        details:
          type: array
          items:
            type: object
            properties:
              field:
                type: string
              message:
                type: string
          description: Field-specific validation errors

  responses:
    BadRequest:
      description: Invalid request format
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'

    NotFound:
      description: Resource not found
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'

    RateLimit:
      description: Rate limit exceeded
      headers:
        Retry-After:
          schema:
            type: integer
          description: Seconds until rate limit resets
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'

    InternalError:
      description: Internal server error
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
