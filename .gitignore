# TrustNet - Comprehensive .gitignore

# ===================================
# Node.js Dependencies and Build Files
# ===================================
node_modules/
npm-debug.log*
yarn-debug.log*
yarn-error.log*
lerna-debug.log*
.pnpm-debug.log*

# Runtime data
pids
*.pid
*.seed
*.pid.lock

# Directory for instrumented libs generated by jscoverage/JSCover
lib-cov

# Coverage directory used by tools like istanbul
coverage/
*.lcov

# nyc test coverage
.nyc_output

# Grunt intermediate storage (https://gruntjs.com/creating-plugins#storing-task-files)
.grunt

# Bower dependency directory (https://bower.io/)
bower_components

# node-waf configuration
.lock-wscript

# Compiled binary addons (https://nodejs.org/api/addons.html)
build/Release

# Dependency directories
jspm_packages/

# TypeScript cache
*.tsbuildinfo

# Optional npm cache directory
.npm

# Optional eslint cache
.eslintcache

# Optional stylelint cache
.stylelintcache

# Microbundle cache
.rpt2_cache/
.rts2_cache_cjs/
.rts2_cache_es/
.rts2_cache_umd/

# Optional REPL history
.node_repl_history

# Output of 'npm pack'
*.tgz

# Yarn Integrity file
.yarn-integrity

# parcel-bundler cache (https://parceljs.org/)
.cache
.parcel-cache

# Next.js build output
.next
out

# Nuxt.js build / generate output
.nuxt
dist

# Gatsby files
.cache/
public

# Vuepress build output
.vuepress/dist

# Docusaurus cache and build outputs
.docusaurus

# Serverless directories
.serverless/

# FuseBox cache
.fusebox/

# DynamoDB Local files
.dynamodb/

# TernJS port file
.tern-port

# Stores VSCode versions used for testing VSCode extensions
.vscode-test

# yarn v2
.yarn/cache
.yarn/unplugged
.yarn/build-state.yml
.yarn/install-state.gz
.pnp.*

# ===================================
# Environment Variables and Secrets
# ===================================
.env
.env.local
.env.development.local
.env.test.local
.env.production.local
.env.staging

# Google Cloud Service Account Keys
*.json
!package*.json
!tsconfig*.json
service-account-key.json
google-credentials.json
gcp-key.json

# AWS Credentials
.aws/

# ===================================
# Python (for ML/AI components)
# ===================================
__pycache__/
*.py[cod]
*$py.class

# C extensions
*.so

# Distribution / packaging
.Python
build/
develop-eggs/
dist/
downloads/
eggs/
.eggs/
lib/
lib64/
parts/
sdist/
var/
wheels/
pip-wheel-metadata/
share/python-wheels/
*.egg-info/
.installed.cfg
*.egg
MANIFEST

# PyInstaller
*.manifest
*.spec

# Installer logs
pip-log.txt
pip-delete-this-directory.txt

# Unit test / coverage reports
htmlcov/
.tox/
.nox/
.coverage
.coverage.*
.cache
nosetests.xml
coverage.xml
*.cover
*.py,cover
.hypothesis/
.pytest_cache/

# Translations
*.mo
*.pot

# Django stuff:
*.log
local_settings.py
db.sqlite3
db.sqlite3-journal

# Flask stuff:
instance/
.webassets-cache

# Scrapy stuff:
.scrapy

# Sphinx documentation
docs/_build/

# PyBuilder
target/

# Jupyter Notebook
.ipynb_checkpoints

# IPython
profile_default/
ipython_config.py

# pyenv
.python-version

# pipenv
Pipfile.lock

# PEP 582
__pypackages__/

# Celery stuff
celerybeat-schedule
celerybeat.pid

# SageMath parsed files
*.sage.py

# Environments
.venv
env/
venv/
ENV/
env.bak/
venv.bak/

# Spyder project settings
.spyderproject
.spyproject

# Rope project settings
.ropeproject

# mkdocs documentation
/site

# mypy
.mypy_cache/
.dmypy.json
dmypy.json

# Pyre type checker
.pyre/

# pytype static type analyzer
.pytype/

# Cython debug symbols
cython_debug/

# ===================================
# Terraform Infrastructure
# ===================================
# Local .terraform directories
**/.terraform/*

# .tfstate files
*.tfstate
*.tfstate.*

# Crash log files
crash.log
crash.*.log

# Exclude all .tfvars files, which are likely to contain sentitive data
*.tfvars
*.tfvars.json

# Ignore override files as they are usually used to override resources locally
override.tf
override.tf.json
*_override.tf
*_override.tf.json

# Include override files you do wish to add to version control using negated pattern
# !example_override.tf

# Include tfplan files to ignore the plan output of command: terraform plan -out=tfplan
*tfplan*

# Ignore CLI configuration files
.terraformrc
terraform.rc

# ===================================
# Docker
# ===================================
# Docker build context exclusions are handled by .dockerignore
# But we can ignore some Docker-related files here
docker-compose.override.yml
.docker/

# ===================================
# Google Cloud Platform
# ===================================
# Ignore Google Cloud SDK files
.gcloud/
.config/gcloud/

# Cloud Build substitutions
_BUILD_SUBSTITUTIONS

# Cloud Functions
.gcf_artifacts/

# Cloud Run configuration
cloudrun-*.yaml

# ===================================
# Database Files
# ===================================
*.db
*.sqlite
*.sqlite3
data.db
test.db

# ===================================
# Logs and Temporary Files
# ===================================
logs
*.log
npm-debug.log*
yarn-debug.log*
yarn-error.log*
lerna-debug.log*

# Runtime data
pids
*.pid
*.seed
*.pid.lock

# Temporary directories
tmp/
temp/
.tmp/

# OS generated files
.DS_Store
.DS_Store?
._*
.Spotlight-V100
.Trashes
ehthumbs.db
Thumbs.db

# ===================================
# IDEs and Editors
# ===================================
# Visual Studio Code
.vscode/settings.json
.vscode/tasks.json
.vscode/launch.json
.vscode/extensions.json
.vscode/*.code-snippets

# Local History for Visual Studio Code
.history/

# Built Visual Studio Code Extensions
*.vsix

# JetBrains IDEs
.idea/
*.swp
*.swo
*~

# Vim
*.swp
*.swo
*.swn

# Emacs
*~
\#*\#
/.emacs.desktop
/.emacs.desktop.lock
*.elc
auto-save-list
tramp
.\#*

# Sublime Text
*.sublime-project
*.sublime-workspace

# ===================================
# Testing and Coverage
# ===================================
coverage/
.coverage
.coverage.*
lcov.info
test-results/
test-reports/
junit.xml

# Jest
jest_output/

# ===================================
# Build and Distribution
# ===================================
build/
dist/
out/
*.tgz
*.tar.gz
*.zip

# ===================================
# TrustNet Specific
# ===================================
# Development test files (keep structure, ignore test data)
test-data/
sample-content/
training-data/

# Model artifacts and cache
models/cache/
*.pkl
*.h5
*.pb
ml-models/trained/

# API response caches
api-cache/
response-cache/

# Analysis results (development)
analysis-results/
verification-cache/

# PowerShell test outputs (keep scripts, ignore results)
test-results.json
api-test-results/

# Local configuration overrides
local-config/
dev-settings/

# Backup files
*.backup
*.bak
*~

# ===================================
# Performance and Monitoring
# ===================================
# Performance test results
perf-results/
benchmark-results/

# Monitoring and metrics
metrics/
monitoring-data/

# ===================================
# Security Scanning Results
# ===================================
# Security scan results
security-scan-results/
vulnerability-reports/
*.sarif

# ===================================
# Documentation Build Artifacts
# ===================================
# Generated documentation
docs/build/
docs/dist/
docs/.doctrees/

# ===================================
# Package Management
# ===================================
# npm
package-lock.json
# Uncomment the next line if you want to ignore package-lock.json
# package-lock.json

# Yarn
yarn.lock
# Uncomment the next line if you want to ignore yarn.lock
# yarn.lock

# pnpm
pnpm-lock.yaml

# ===================================
# Miscellaneous
# ===================================
# MAC OS
.DS_Store

# Windows
Thumbs.db
ehthumbs.db
Desktop.ini

# Linux
*~

# Archives
*.7z
*.dmg
*.gz
*.iso
*.jar
*.rar
*.tar
*.zip

# Logs
logs
*.log

# Dependency directories
node_modules/

# Optional: Ignore IDE specific files (uncomment as needed)
# .vscode/
# .idea/
